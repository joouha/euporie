[tool.poetry]
name = "euporie"
version = "2.0.8"
description = "Euporie is a suite of terminal applications for interacting with Jupyter kernels"
authors = ["Josiah Outram Halstead <josiah@halstead.email>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/joouha/euporie"
documentation = "https://euporie.readthedocs.io/en/latest"
keywords = ["jupyter", "ipython", "markdown", "terminal", "notebook"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: Jupyter",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3.8",
]

[tool.poetry.urls]
"Changelog" = "https://euporie.readthedocs.io/en/latest/pages/changelog.html"
"Bug Tracker" = "https://github.com/joouha/euporie/issues"

[tool.poetry.plugins."euporie.apps"]
"launch" = "euporie.core.launch:CoreApp"
"console" = "euporie.console.app:ConsoleApp"
"notebook" = "euporie.notebook.app:NotebookApp"
"preview" = "euporie.preview.app:PreviewApp"
"hub" = "euporie.hub.app:HubApp"

[tool.poetry.plugins."pygments.lexers"]
argparse = 'euporie.core.pygments:ArgparseLexer'

[tool.poetry.plugins."pygments.styles"]
euporie = 'euporie.core.pygments:EuporiePygmentsStyle'

[tool.poetry.scripts]
euporie = 'euporie.core.__main__:main'
euporie-console = 'euporie.console.__main__:main'
euporie-notebook = 'euporie.notebook.__main__:main'
euporie-preview = 'euporie.preview.__main__:main'
euporie-hub = 'euporie.hub.__main__:main'

[tool.poetry.dependencies]
python = "^3.8"
prompt-toolkit = "^3.0.27"
Pygments = "^2.11.2"
nbformat = "^5"
jupyter-client = "^7.1"
aenum = "^3.1"
typing-extensions = "^4.2.0"
fastjsonschema = "^2.15.3"
appdirs = "^1.4"
pyperclip = "^1.8"
imagesize = "^1.3.0"
markdown-it-py = {extras = ["linkify"], version = "^2.0.1"}
linkify = "^1.4"
mdit-py-plugins = "^0.3.0"
flatlatex = "~0.15"
timg = "^1.1"
Pillow = "^9.0"
asyncssh = {version = "^2.10.1", optional = true}
universal-pathlib = "^0.0.19"
black = {version = ">=19.3b0", optional = true}
isort = {version = "^5.10.1", optional = true}
ssort = {version = "^0.11.6", optional = true}
mtable = {version = "^0.1", optional = true}
CairoSVG = {version = "^2.5", optional = true}
html5lib = {version = "^1.1", optional = true}
sympy = {version = "^1.9", optional = true}
antlr4-python3-runtime = {version = "^4.9", optional = true}
img2unicode = {version = "^0.1a8", optional = true}
fsspec = {extras = ["http"], version = "^2022.8.0"}

[tool.poetry.extras]
all = ["black", "isort", "ssort", "CairoSVG", "asyncssh"]
hub = ["asyncssh"]
formatters = ["black", "isort", "ssort"]
svg-cairosvg = ["CairoSVG"]
latex-sympy = ["sympy", "antlr4-python3-runtime"]
html-mtable = ["mtable", "html5lib"]
images-img2unicode = ["img2unicode"]

[tool.poetry.dev-dependencies]
isort = "^5.8.0"
flake8 = "^4.0.1"
poetry-publish = "^0.5.0"
flake8-black = "^0.3.2"
flake8-bugbear = "^22.3.23"
flake8-bandit = "^3.0.0"
flake8-annotations = "^2.6.2"
flake8-docstrings = "^1.6.0"
flake8-isort = "^4.0.0"
darglint = "^1.8.0"
nox-poetry = "^0.9.0"
Sphinx = "^4.4.0"
sphinx-autobuild = "^2021.3.14"
sphinx-rtd-theme = "^1.0.0"
furo = "^2022.3.4"
black = "^22.1.0"
ssort = "^0.11.0"
flake8-comprehensions = "^3.8.0"
sphinx-argparse-cli = "^1.8.3"
sphinxext-opengraph = "^0.6.2"
sphinx-copybutton = "^0.5.0"
codespell = "^2.1.0"
pytest = "^7.1.1"
mypy = "^0.942"
rich = "^12.2.0"
sphinx_design = "^0.2.0"
sphinxcontrib-video = "^0.0.1-alpha.3"
html2text = "^2020.1.16"

[tool.isort]
profile = "black"
multi_line_output = 3

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
pretty = true
show_error_context = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "_frozen_importlib",
    "upath", "aenum", "pygments.*", "fastjsonschema", "appdirs", "pyperclip", "asyncssh",
    "ipykernel",
    "mtable",
    "imagesize", "PIL","timg", "img2unicode", "teimpy", "numpy",
    "flatlatex", "sympy.*", "pylatexenc.latex2text", "IPython.lib.latextools",
    "cairosvg",
    "ssort",
    "poetry_publish.publish",
    "bs4",
]
ignore_missing_imports = true
