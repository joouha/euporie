[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "euporie"
description = 'Euporie is a suite of terminal applications for interacting with Jupyter kernels'
readme = "README.rst"
requires-python = ">=3.8"
# license = "MIT"
keywords = ["euporie", "jupyter", "ipython", "markdown", "terminal", "notebook"]
authors = [
  { name = "Josiah Outram Halstead", email = "josiah@halstead.email" },
]
dynamic = ["version"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Environment :: Console",
  "Framework :: Jupyter",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "prompt-toolkit~=3.0.36",
  "Pygments~=2.11",
  "nbformat~=5.0",
  "jupyter_client>=7.1",
  "aenum~=3.1,<=3.1.12",
  "typing-extensions~=4.5",
  "fastjsonschema~=2.15",
  "platformdirs~=3.5",
  "pyperclip~=1.8",
  "imagesize~=1.3",
  "markdown-it-py~=2.1.0",
  "linkify-it-py~=1.0",
  "mdit-py-plugins~=0.3.0",
  "flatlatex~=0.15",
  "timg~=1.1",
  "Pillow~=9.0",
  "sixelcrop~=0.1.3",
  "universal-pathlib<0.0.24",
  "fsspec[http]>=2022.8.0",
]

[project.optional-dependencies]
hub = ["asyncssh~=2.10.1"]
format = ["black>=19.3.b0", "isort~=5.10.1"]
chafa = ["chafa.py>=1.0.2"]
jupytext = ["jupytext>=1.14.0"]

[project.urls]
Documentation = "https://euporie.readthedocs.io/en/latest"
Issues = "https://github.com/joouha/euporie/issues"
Source = "https://github.com/joouha/euporie"
Changelog = "https://euporie.readthedocs.io/en/latest/pages/changelog.html"

[project.scripts]
euporie = "euporie.core.__main__:main"
euporie-console = "euporie.console.__main__:main"
euporie-notebook = "euporie.notebook.__main__:main"
euporie-preview = "euporie.preview.__main__:main"
euporie-hub = "euporie.hub.__main__:main"

[project.entry-points."euporie.apps"]
launch = "euporie.core.launch:CoreApp"
console = "euporie.console.app:ConsoleApp"
notebook = "euporie.notebook.app:NotebookApp"
preview = "euporie.preview.app:PreviewApp"
hub = "euporie.hub.app:HubApp"

[project.entry-points."pygments.lexers"]
argparse = 'euporie.core.pygments:ArgparseLexer'

[project.entry-points."pygments.styles"]
euporie = 'euporie.core.pygments:EuporiePygmentsStyle'

[project.entry-points."jupyter_client.kernel_provisioners"]
logging-local-provisioner = "euporie.core.kernel:LoggingLocalProvisioner"

[tool.hatch.build.targets.wheel.shared-data]
"euporie/data/desktop" = "share/applications/"

[tool.hatch.version]
path = "euporie/core/__init__.py"

[tool.hatch.build]
packages = ["euporie"]

[tool.hatch.envs.default]
dev-mode = true
features = [
  "hub",
  "format",
]


[tool.hatch.envs.multi]
[[tool.hatch.envs.multi.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "pypy3"]

[tool.hatch.envs.check]
description = "Lint & type check the codebase."
# detached = true
dependencies = [
  # Linting
  "pre-commit",
  "pre-commit-hooks",
  "black",
  "ruff",
  "codespell", "tomli",
  # LSP
  "python-lsp-server", "python-lsp-ruff", "python-lsp-black", "pylsp-mypy", "jedi",
  # Type checking
  "mypy",
  # Dependencies
  "types-appdirs", "importlib_metadata", "types-Pillow", "sixelcrop",
  # Optional dependencies
  "rich", "black", "isort", "ssort",
  # Non-dependencies
  "html2text", "sympy"
]

[tool.hatch.envs.check.scripts]
check = [
    "black --check {args:euporie tests scripts}",
    "ruff {args:euporie tests scripts}",
    "codespell {args:euporie tests scripts docs/pages}",
]
fix = [
    "black {args:euporie tests scripts}",
    "ruff --fix {args:euporie tests scripts}",
    "codespell -i 3 -w {args:euporie tests scripts docs/pages}",
]
type = "mypy {args:--namespace-packages -p euporie -p tests -p scripts}"


[tool.hatch.envs.type.scripts]


[tool.hatch.envs.test]
description = "Run tests."
detached = false
dependencies = [
  "pytest", "pytest-asyncio", "pytest-cov", "coverage",
  # Optional non-dependencies
  "python-magic", "html2text",
]
[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "pypy3"]

[tool.hatch.envs.test.scripts]
run = "pytest {args}"
cov = "coverage run --parallel -m pytest {args}"

[tool.hatch.envs.docs]
description = "Build documentation."
dependencies = [
  "Sphinx~=4.4.0",
  "sphinx-autobuild~=2021.3.14",
  "sphinx-rtd-theme~=1.0.0",
  "sphinx-argparse-cli~=1.8.3",
  "sphinxext-opengraph~=0.6.2",
  "sphinx-copybutton~=0.5.0",
  "sphinx-design~=0.2.0",
]
[tool.hatch.envs.docs.scripts]
build = "sphinx-build docs docs/_build/html"
serve = "python -m http.server --directory docs/_build/html/"
autobuild = "sphinx-autobuild docs docs/_build/html"

[tool.ruff]
line-length = 88
select = ["ANN", "B", "C", "D", "E", "F", "I", "Q", "S", "T", "UP"]
ignore = [
    # Annotations on `self` and `cls`
    "ANN101", "ANN102",
    # Use of typing.Any
    "ANN401",
    # Function too complex
    "C901",
    # Use of assert
    "S101",
    # Line to long
    "E501",
    # Google style docstrings
    "D203", "D204", "D213", "D215", "D400", "D404", "D406", "D407", "D408", "D409", "D413",
    # Allow empty functions in ABCs
    "B027",
    # zip() without an explicit strict= parameter
    "B905",
    # Ignore subprocess warnings
    "S603", "S607"
]

[tool.ruff.per-file-ignores]
"scripts/*.py" = ["T201"]

[tool.codespell]
ignore-words-list = "iterm,edn,controll,controle"
skip = "euporie/core/reference.py,.*"


[tool.mypy]
# pretty = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
  "_frozen_importlib", "ipykernel", "fastjsonschema",
  "pyperclip", "upath.*", "chafa.*", "timg", "pylatexenc.*", "aenum", "pygments.*",
  "jupytext.*",
  "ssort",
  "flatlatex.*", "timg", "img2unicode", "cairosvg", "teimpy", "numpy", "mtable", "imagesize", "matplotlib.*",
  "magic", "fsspec.*",
  "pytest.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
